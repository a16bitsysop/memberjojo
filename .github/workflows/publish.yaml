name: Publish to PyPI or TestPyPI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install python build
        run: pip install build

      - name: Build the wheel
        run: python3 -m build

      - name: Save _version.py
              uses: actions/upload-artifact@v4
              with:
                name: version.py
                path: src/memberjojo/_version.py

      - name: Determine publish target
        id: determine-target
        run: |
          TAG="${GITHUB_REF##*/}"
          echo "Tag is $TAG"
          if [[ "$TAG" == *rc* ]] || [[ "$TAG" == *a* ]] || [[ "$TAG" == *b* ]] || [[ "$TAG" == *dev* ]]; then
            echo "target=testpypi" >> "$GITHUB_OUTPUT"
          else
            echo "target=pypi" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish with Flit
        env:
          FLIT_USERNAME: __token__
          FLIT_PASSWORD: ${{ steps.determine-target.outputs.target == 'testpypi' && secrets.TEST_PYPI_TOKEN || secrets.PYPI_TOKEN }}
        run: |
          if [ "${{ steps.determine-target.outputs.target }}" = "testpypi" ]; then
            flit publish --repository testpypi
          else
            flit publish
          fi

  docs:
    if: startsWith(github.ref, 'refs/tags/')
    name: Build & Deploy Docs
    runs-on: ubuntu-latest

    permissions:
      contents: write  # needed for GitHub Pages deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install ".[docs]"

      - name: Load _version.py
        uses: actions/download-artifact@v4
        with:
          name: version.py

      - name: Build Sphinx documentation
        run: sphinx-build -b html docs/source docs/_build/html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
          publish_branch: gh-pages
          